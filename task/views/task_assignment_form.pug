extends ../../views/layout

block content
    h1= title
    p Each person in the organization may be available for the job and qualified for zero or more roles
    p If a person is 
    ul 
        li Available and Qualified, the name is #[strong.text-primary this color]
        li #[strong Not] Available but Qualified, the name is #[strong.text-success this color]
        li Available but #[strong Not] Qualified, the name is #[strong.text-warning this color]
        li #[strong Not] Available and #[strong Not] Qualified, the name is #[strong.text-danger this color]
    p Once a person is selected, the name is displayed #[strong.text-muted muted]
    form(method='POST' action='' novalidate )
        if roles && roles.length != 0 
            table(class='table' id='job-table')
                thread 
                    tr 
                    th(class='text-left' scope='col') Role 
                    th(class='text-left' scope='col') Name 
                    th(class='text-left' scope='col') Availability Exceptions
                    th(class='text-left' scope='col') Qualification Exceptions
                tbody 
                    - var irole = 0
                    for role in roles 
                        tr
                            - var roleTag = 'Role'+irole
                            //- loop through each person in the organization building a slection list
                            //- and indicating is they are qualified, available, and selected
                            td
                                p= role.name
                            td
                                - var s = 'text-dark'
                                - var t
                                select.form-control(type='select', placeholder='Select person' id=role.id name=roleTag required='true' onchange='changePerson(event)')
                                    option(value='') --- Select Person for Role ---
                                    - var selectedPerson = 0; 
                                    for person in role.persons 
                                        if (person.qualification.qualified && person.availability.available)
                                            - s = 'text-primary'
                                            - t = person.name + ' (qualified and available)'
                                        else if (person.qualification.qualified && !person.availability.available)
                                            - s = 'text-success'
                                            - t = person.name + ' (qualified and not available)'
                                        else if (!person.qualification.qualified && person.availability.available)
                                            - s = 'text-warning'
                                            - t = person.name + ' (not qualified but available)'
                                        else if (!person.qualification.qualified && !person.availability.available)
                                            - s = 'text-danger'
                                            - t = person.name + ' (not qualified and not available)'
                                        if (person.selected)
                                            - selectedPerson = person.id
                                            option(value=person.id class=s selected) #{t}
                                        else
                                            option(value=person.id class=s) #{t}
                            td(class='text-center')
                                button.btn.btn-small.btn-dark(type='button' id='avail-r'+role.id data-toggle='modal' data-target='#avail-r'+role.id+'p'+selectedPerson)
                            td(class='text-center')
                                button.btn.btn-small.btn-dark(type='button' id='qual-r'+role.id data-toggle='modal' data-target='#qual-r'+role.id+'p'+selectedPerson)
                            - irole++
        button.btn.btn-primary(type='submit' name='save' value='save' onclick='checkDuplicates(event)') Save
        p 
        a(href='/jobs/job/'+job.id+'/tasks')
            button.btn.btn-danger(type='button' ) Cancel
    p.text-danger(id='validationErrors')
    if errors 
        ul  
        for error in errors
            li!= err.msg
    script(type='text/javascript').
        function checkDuplicates(event) {
            var nRoles =  #{roles.length};
            var personIDs = [];
            var roleNames = [];
            for (let i = 0; i < nRoles; i++) {
                roleNames[i] = 'Role' + i;
                personIDs[i] = document.getElementById(roleNames[i]).value;
                console.log(personIDs[i]);
            }
            var nErrors = 0;
            document.getElementById('validationErrors').innerHTML = '';
            for (let i = 0; i < nRoles; i++) {
                if (personIDs[i] != '') {
                    for (let j = i+1; j < nRoles; j++) {
                        if (personIDs[i] == personIDs[j]) {
                        document.getElementById('validationErrors').innerHTML =  
                                document.getElementById('validationErrors').innerHTML + 
                                '<br> The same person is assignd to ' + roleNames[i] + ' and ' + roleNames[j] + '. ';
                            nErrors++;
                        }
                    }
                }
            }
            if (nErrors != 0)
                event.preventDefault();
        }

        // switch the avaiability and qualification buttons for the role person just changed
        function changePerson(event) {

            var roleID = event.currentTarget.id; //- role.id
            var personID = event.currentTarget.options[event.currentTarget.selectedIndex].value; // - person.id
            var dataTarget = 'r'+roleID+'p'+personID;
            var availButton = document.getElementById('avail-r'+roleID); //- available button
            var qualButton = document.getElementById('qual-r'+roleID); //- available button
            availButton.dataset.target='#avail-'+dataTarget;
            qualButton.dataset.target='#qual-'+dataTarget;

        }
    //- build the qualification and availability modals 
    for role in roles
        for person in role.persons
            div(class='modal fade modal-lx' id='avail-r'+role.id+'p'+person.id aria-labelby=id='avail-r'+role.id+'p'+person.id tabindex='-1' role='dialog' aria-hidden='true')
                div.modal-dialog(role='document')
                    div.modal-content(role='document')
                        div.modal-header
                            h4= "Availabiliyy Exception for '" + person.name + "'"
                            button.close(type='button' data-dismiss='modal' aria-label='Close')
                                span(aria-hidden='true') &times;
                        div.modal-body
                            if (person.availability.reasons.length != 0)
                                for reason in person.availability.reasons
                                    p= reason
                            else 
                                p There are no exceptions. Person is available
                        div.modal-footer
                            button.btn.btn-primary(type='button' data-dismiss='modal') OK 
            div(class='modal fade modal-lx' id='qual-r'+role.id+'p'+person.id aria-labelby=id='qual-r'+role.id+'p'+person.id tabindex='-1' role='dialog' aria-hidden='true')
                div.modal-dialog(role='document')
                    div.modal-content(role='document')
                        div.modal-header
                            h4= "Qualification Exception for '" + person.name + "' for role '" + role.name + "'"
                            button.close(type='button' data-dismiss='modal' aria-label='Close')
                                span(aria-hidden='true') &times;
                        div.modal-body
                            if (person.qualification.reasons.length != 0)
                                for reason in person.qualification.reasons
                                    p= reason
                            else 
                                p There are no exceptions. Person is qualified
                        div.modal-footer
                            button.btn.btn-primary(type='button' data-dismiss='modal') OK