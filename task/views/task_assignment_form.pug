extends ../../views/layout

block content
    h1= title
    p Each person in the organization may be available for the job and qualified for zero or more roles
    p If a person is 
    ul 
        li Available and Qualified, the name is #[strong.text-primary this color]
        li #[strong Not] Available but Qualified, the name is #[strong.text-success this color]
        li Available but #[strong Not] Qualified, the name is #[strong.text-warning this color]
        li #[strong Not] Available and #[strong Not] Qualified, the name is #[strong.text-danger this color]
    p Once a person is selected, the name is displayed #[strong.text-muted muted]
    form(method='POST' action='' novalidate )
        if roles && roles.length != 0 
            table(class='table' id='job-table')
                thread 
                    tr 
                    th(class='text-left' scope='col') Role 
                    th(class='text-left' scope='col') Name 
                    th(class='text-left' scope='col') Availability Exceptions
                    th(class='text-left' scope='col') Qualification Exceptions
                tbody 
                    - var irole = 0
                    for role in roles 
                        tr
                            - var roleTag = 'Role'+irole
                            //- loop through each person in the organization building a slection list
                            //- and indicating is they are qualified, available, and selected
                            td
                                p= role.name
                            td
                                - var s = 'text-dark'
                                - var t
                                select.form-control(type='select', placeholder='Select person' id=roleTag name=roleTag required='true' onchange='changePerson(event)')
                                    option(value='') --- Select Person for Role ---
                                    - var selectedPerson = 0; 
                                    for person in role.persons 
                                        if (person.qualification.qualified && person.availability.available)
                                            - s = 'text-primary'
                                            - t = person.name + ' (qualified and available)'
                                        else if (person.qualification.qualified && !person.availability.available)
                                            - s = 'text-success'
                                            - t = person.name + ' (qualified and not available)'
                                        else if (!person.qualification.qualified && person.availability.available)
                                            - s = 'text-warning'
                                            - t = person.name + ' (not qualified but available)'
                                        else if (!person.qualification.qualified && !person.availability.available)
                                            - s = 'text-danger'
                                            - t = person.name + ' (not qualified and not available)'
                                        if (person.selected)
                                            - selectedPerson = person.id
                                            option(value=person.id class=s selected) #{t}
                                        else
                                            option(value=person.id class=s) #{t}
                            td(class='text-center')
                                button.btn.btn-small.btn-dark(type='button' id='avail-'+roleTag data-toggle='modal' data-target='#avail-'+roleTag+'p'+selectedPerson)
                            td(class='text-center')
                                button.btn.btn-small.btn-dark(type='button' id='qual-'+roleTag data-toggle='modal' data-target='#qual-'+roleTag+'p'+selectedPerson)
                            - irole++
        button.btn.btn-primary(type='submit' name='save' value='save' onclick='checkDuplicates(event)') Save
        p 
        a(href='/jobs/job/'+job.id+'/tasks')
            button.btn.btn-danger(type='button' ) Cancel
        if (roles && roles.length != 0)
            //- this section shows the availability and qualifcation details for all of the 
            //- persons in the organization
            div.row
                div.col-sm-6
                    details
                        summary.font-weight-bold Availability Exceptions 
                        //- only role 1 is needed for listing avaiability as it is role independent
                        - iRole = 0
                        for role in roles
                            if (iRole == 0)
                                for person in role.persons  
                                    details  
                                        summary.font-italic(style='text-indent:10px;')= person.name 
                                        if (!person.availability.available)
                                            for reason in person.availability.reasons
                                                p(style='text-indent:20px;')= reason
                                        else 
                                            p(style='text-indent:20px;') There are no exceptions. Person is available
                            - iRole++
                div.col-sm-6
                    details 
                        summary.font-weight-bold Qualification Exceptions 
                        for role in roles 
                            details 
                                summary.font-italic(style='text-indent:10px;')= role.name
                                for person in role.persons 
                                    details
                                        summary.font-weight-light(style='text-indent:20px;')= person.name
                                        if (!person.qualification.qualified)
                                            for reason in person.qualification.reasons
                                                p(style='text-indent:30px;')= reason
                                        else 
                                            p(style='text-indent:30px;') There are no exceptions. Person is qualified

    p.text-danger(id='validationErrors')
    if errors 
        ul  
        for error in errors
            li!= err.msg
    script(type='text/javascript').
        function checkDuplicates(event) {
            var nRoles =  #{roles.length};
            var personIDs = [];
            var roleTags = [];
            for (let i = 0; i < nRoles; i++) {
                roleTags[i] = 'Role' + i;
                personIDs[i] = document.getElementById(roleTags[i]).value;
            }
            var nErrors = 0;
            document.getElementById('validationErrors').innerHTML = '';
            for (let i = 0; i < nRoles; i++) {
                if (personIDs[i] != '') {
                    for (let j = i+1; j < nRoles; j++) {
                        if (personIDs[i] == personIDs[j]) {
                        document.getElementById('validationErrors').innerHTML =  
                                document.getElementById('validationErrors').innerHTML + 
                                '<br> The same person is assignd to positions ' + (i+1) + ' and ' + (j+1) + '. ';
                            nErrors++;
                        }
                    }
                }
            }
            if (nErrors != 0)
                event.preventDefault();
        }

        // switch the avaiability and qualification buttons for the role person just changed
        function changePerson(event) {

            let roleTag = event.currentTarget.id;
            let personID = event.currentTarget.options[event.currentTarget.selectedIndex].value; // - person.id
            let dataTarget = roleTag+'p'+personID;
            let availButton = document.getElementById('avail-'+roleTag); //- available button
            let qualButton = document.getElementById('qual-'+roleTag); //- available button
            availButton.dataset.target='#avail-'+dataTarget;
            qualButton.dataset.target='#qual-'+dataTarget;

        }
    //- build the qualification and availability modals 
    - var iRole = 0
    for role in roles
        -var roleTag = 'Role' + iRole
        for person in role.persons
            div(class='modal fade modal-lx' id='avail-'+roleTag+'p'+person.id aria-labelby=id='avail-r'+roleTag+'p'+person.id tabindex='-1' role='dialog' aria-hidden='true')
                div.modal-dialog(role='document')
                    div.modal-content(role='document')
                        div.modal-header
                            h4= "Availabiliyy Exception for '" + person.name + "'"
                            button.close(type='button' data-dismiss='modal' aria-label='Close')
                                span(aria-hidden='true') &times;
                        div.modal-body
                            if (person.availability.reasons.length != 0)
                                for reason in person.availability.reasons
                                    p= reason
                            else 
                                p There are no exceptions. Person is available
                        div.modal-footer
                            button.btn.btn-primary(type='button' data-dismiss='modal') OK 
            div(class='modal fade modal-lx' id='qual-'+roleTag+'p'+person.id aria-labelby=id='qual-r'+role.id+'p'+person.id tabindex='-1' role='dialog' aria-hidden='true')
                div.modal-dialog(role='document')
                    div.modal-content(role='document')
                        div.modal-header
                            h4= "Qualification Exception for '" + person.name + "' for role '" + role.name + "'"
                            button.close(type='button' data-dismiss='modal' aria-label='Close')
                                span(aria-hidden='true') &times;
                        div.modal-body
                            if (person.qualification.reasons.length != 0)
                                for reason in person.qualification.reasons
                                    p= reason
                            else 
                                p There are no exceptions. Person is qualified
                        div.modal-footer
                            button.btn.btn-primary(type='button' data-dismiss='modal') OK
        - iRole++